=======================
``matrix_divided`` module
=======================

Usage of ``matrix_divided``:
- two variables ``matrix`` and ``div``
- ``matrix`` must be a list of integers or floats with rows of the same size
- ``div`` must be a number (integer or float) and can't be 0
- All elements of the matrix should be divided by div, rounded to 2 decimal places
-------------------

Import:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Divide 2x3 matrix by 2:
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Divide 2x3 matrix containing a string by 2:
    >>> matrix_divided([[2, 4, "hello"], [8, 10, 12]], 2)
    Traceback (most recent call last):
      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divide 2x3 matrix of different sizes by 2:
    >>> matrix_divided([[2, 4, 6, 8], [8, 10, 12]], 2)
    Traceback (most recent call last):
      ...
    TypeError: Each row of the matrix must have the same size

Divide 2x3 matrix by 0:
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], 0)
    Traceback (most recent call last):
      ...
    ZeroDivisionError: division by zero

Divide 2x3 matrix by 1.5:
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], 1.5)
    [[1.33, 2.67, 4.0], [5.33, 6.67, 8.0]]

Divide 2x3 matrix by float('inf'):
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Divide 2x3 matrix but no div:
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]])
    Traceback (most recent call last):
      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Call function with no arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
      ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
